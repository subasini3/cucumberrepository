[
  {
    "line": 2,
    "elements": [
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 28967352400,
              "status": "passed"
            },
            "line": 4,
            "name": "The user should launch the chrome browser",
            "match": {
              "location": "FacebookLoginStepDef.the_user_should_launch_the_chrome_browser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5796681501,
              "status": "passed"
            },
            "line": 5,
            "name": "The person should type the url",
            "match": {
              "location": "FacebookLoginStepDef.the_person_should_type_the_url()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 689323901,
              "status": "passed"
            },
            "line": 6,
            "name": "The user should maximize the window",
            "match": {
              "location": "FacebookLoginStepDef.the_user_should_maximize_the_window()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2021-11-04T21:55:58.761Z",
        "before": [
          {
            "result": {
              "duration": 26746229000,
              "status": "passed"
            },
            "match": {
              "location": "HooksClass.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 461699,
              "status": "passed"
            },
            "match": {
              "location": "HooksClass.startTime()"
            }
          },
          {
            "result": {
              "duration": 226000,
              "status": "passed"
            },
            "match": {
              "location": "HooksClass.bfreSce()"
            }
          }
        ],
        "line": 9,
        "name": "validate with invalid username and invalid password",
        "description": "",
        "id": "to-validate-login-functionality-of-facebook;validate-with-invalid-username-and-invalid-password",
        "after": [
          {
            "result": {
              "duration": 946199,
              "status": "passed"
            },
            "match": {
              "location": "HooksClass.aftrSce(Scenario)"
            }
          },
          {
            "result": {
              "duration": 282500,
              "status": "passed"
            },
            "match": {
              "location": "HooksClass.endTime()"
            }
          },
          {
            "result": {
              "duration": 7320893001,
              "status": "passed"
            },
            "match": {
              "location": "HooksClass.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2151924300,
              "status": "passed"
            },
            "line": 11,
            "name": "The user should type the invalid username and invalid passwords",
            "match": {
              "location": "FacebookLoginStepDef.the_user_should_type_the_invalid_username_and_invalid_passwords(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "first",
                  "last",
                  "user",
                  "pass",
                  "data",
                  "storage"
                ]
              },
              {
                "cells": [
                  "suba",
                  "jui",
                  "aaa",
                  "jasdi",
                  "sdsf",
                  "sfi"
                ]
              },
              {
                "cells": [
                  "sur",
                  "jwww",
                  "sya",
                  "jiwgh",
                  "sjuii",
                  "weeee"
                ]
              },
              {
                "cells": [
                  "hi",
                  "ppp",
                  "serr",
                  "nnjj",
                  "qqwe",
                  "mkkk"
                ]
              },
              {
                "cells": [
                  "ggg",
                  "ji",
                  "adfgg",
                  "nmhjh",
                  "qwqerw",
                  "hgjy"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3601501800,
              "status": "passed"
            },
            "line": 20,
            "name": "The user should click the login button",
            "match": {
              "location": "FacebookLoginStepDef.the_user_should_click_the_login_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 36199800000,
              "status": "passed"
            },
            "line": 21,
            "name": "The user should get the title of the incorrect credential page",
            "match": {
              "location": "FacebookLoginStepDef.the_user_should_get_the_title_of_the_incorrect_credential_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 335748400,
              "status": "passed"
            },
            "line": 22,
            "name": "The user should navigate to incorrect credential page",
            "match": {
              "location": "FacebookLoginStepDef.the_user_should_navigate_to_incorrect_credential_page()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 9516572200,
              "status": "passed"
            },
            "line": 4,
            "name": "The user should launch the chrome browser",
            "match": {
              "location": "FacebookLoginStepDef.the_user_should_launch_the_chrome_browser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5761207201,
              "status": "passed"
            },
            "line": 5,
            "name": "The person should type the url",
            "match": {
              "location": "FacebookLoginStepDef.the_person_should_type_the_url()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 318576699,
              "status": "passed"
            },
            "line": 6,
            "name": "The user should maximize the window",
            "match": {
              "location": "FacebookLoginStepDef.the_user_should_maximize_the_window()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2021-11-04T21:57:51.267Z",
        "before": [
          {
            "result": {
              "duration": 18893579500,
              "status": "passed"
            },
            "match": {
              "location": "HooksClass.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 252599,
              "status": "passed"
            },
            "match": {
              "location": "HooksClass.startTime()"
            }
          },
          {
            "result": {
              "duration": 124902,
              "status": "passed"
            },
            "match": {
              "location": "HooksClass.bfreSce()"
            }
          }
        ],
        "line": 36,
        "name": "validate with invalid username and valid password",
        "description": "",
        "id": "to-validate-login-functionality-of-facebook;validate-with-invalid-username-and-valid-password;;2",
        "after": [
          {
            "result": {
              "duration": 129100,
              "status": "passed"
            },
            "match": {
              "location": "HooksClass.aftrSce(Scenario)"
            }
          },
          {
            "result": {
              "duration": 182898,
              "status": "passed"
            },
            "match": {
              "location": "HooksClass.endTime()"
            }
          },
          {
            "result": {
              "duration": 1720504699,
              "status": "passed"
            },
            "match": {
              "location": "HooksClass.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 474321300,
              "status": "passed"
            },
            "line": 28,
            "name": "The user should type the invalid username\"java\" and valid password\"123\"",
            "match": {
              "arguments": [
                {
                  "val": "\"java\"",
                  "offset": 41
                },
                {
                  "val": "\"123\"",
                  "offset": 66
                }
              ],
              "location": "FacebookLoginStepDef.the_user_should_type_the_invalid_username_and_valid_password(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3486523401,
              "status": "passed"
            },
            "line": 29,
            "name": "The user should click the login button",
            "match": {
              "location": "FacebookLoginStepDef.the_user_should_click_the_login_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10049034000,
              "status": "passed"
            },
            "line": 30,
            "name": "The user should get the cuurent url of the incorrect credential page",
            "match": {
              "location": "FacebookLoginStepDef.the_user_should_get_the_cuurent_url_of_the_incorrect_credential_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11715401,
              "status": "passed"
            },
            "line": 31,
            "name": "The user should navigate to incorrect credential page",
            "match": {
              "location": "FacebookLoginStepDef.the_user_should_navigate_to_incorrect_credential_page()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 13544537800,
              "status": "passed"
            },
            "line": 4,
            "name": "The user should launch the chrome browser",
            "match": {
              "location": "FacebookLoginStepDef.the_user_should_launch_the_chrome_browser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 8030091300,
              "status": "passed"
            },
            "line": 5,
            "name": "The person should type the url",
            "match": {
              "location": "FacebookLoginStepDef.the_person_should_type_the_url()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 228527200,
              "status": "passed"
            },
            "line": 6,
            "name": "The user should maximize the window",
            "match": {
              "location": "FacebookLoginStepDef.the_user_should_maximize_the_window()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2021-11-04T21:58:41.564Z",
        "before": [
          {
            "result": {
              "duration": 15949638299,
              "status": "passed"
            },
            "match": {
              "location": "HooksClass.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 375500,
              "status": "passed"
            },
            "match": {
              "location": "HooksClass.startTime()"
            }
          },
          {
            "result": {
              "duration": 180401,
              "status": "passed"
            },
            "match": {
              "location": "HooksClass.bfreSce()"
            }
          }
        ],
        "line": 37,
        "name": "validate with invalid username and valid password",
        "description": "",
        "id": "to-validate-login-functionality-of-facebook;validate-with-invalid-username-and-valid-password;;3",
        "after": [
          {
            "result": {
              "duration": 199498,
              "status": "passed"
            },
            "match": {
              "location": "HooksClass.aftrSce(Scenario)"
            }
          },
          {
            "result": {
              "duration": 309199,
              "status": "passed"
            },
            "match": {
              "location": "HooksClass.endTime()"
            }
          },
          {
            "result": {
              "duration": 1049588601,
              "status": "passed"
            },
            "match": {
              "location": "HooksClass.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 729235699,
              "status": "passed"
            },
            "line": 28,
            "name": "The user should type the invalid username\"sql\" and valid password\"345\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sql\"",
                  "offset": 41
                },
                {
                  "val": "\"345\"",
                  "offset": 65
                }
              ],
              "location": "FacebookLoginStepDef.the_user_should_type_the_invalid_username_and_valid_password(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3285983900,
              "status": "passed"
            },
            "line": 29,
            "name": "The user should click the login button",
            "match": {
              "location": "FacebookLoginStepDef.the_user_should_click_the_login_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2935186200,
              "status": "passed"
            },
            "line": 30,
            "name": "The user should get the cuurent url of the incorrect credential page",
            "match": {
              "location": "FacebookLoginStepDef.the_user_should_get_the_cuurent_url_of_the_incorrect_credential_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19395301,
              "status": "passed"
            },
            "line": 31,
            "name": "The user should navigate to incorrect credential page",
            "match": {
              "location": "FacebookLoginStepDef.the_user_should_navigate_to_incorrect_credential_page()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 29858062401,
              "status": "passed"
            },
            "line": 4,
            "name": "The user should launch the chrome browser",
            "match": {
              "location": "FacebookLoginStepDef.the_user_should_launch_the_chrome_browser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 11964351000,
              "status": "passed"
            },
            "line": 5,
            "name": "The person should type the url",
            "match": {
              "location": "FacebookLoginStepDef.the_person_should_type_the_url()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 357234200,
              "status": "passed"
            },
            "line": 6,
            "name": "The user should maximize the window",
            "match": {
              "location": "FacebookLoginStepDef.the_user_should_maximize_the_window()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2021-11-04T21:59:27.342Z",
        "before": [
          {
            "result": {
              "duration": 18158181298,
              "status": "passed"
            },
            "match": {
              "location": "HooksClass.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 257998,
              "status": "passed"
            },
            "match": {
              "location": "HooksClass.startTime()"
            }
          },
          {
            "result": {
              "duration": 128900,
              "status": "passed"
            },
            "match": {
              "location": "HooksClass.bfreSce()"
            }
          }
        ],
        "line": 38,
        "name": "validate with invalid username and valid password",
        "description": "",
        "id": "to-validate-login-functionality-of-facebook;validate-with-invalid-username-and-valid-password;;4",
        "after": [
          {
            "result": {
              "duration": 107100,
              "status": "passed"
            },
            "match": {
              "location": "HooksClass.aftrSce(Scenario)"
            }
          },
          {
            "result": {
              "duration": 233499,
              "status": "passed"
            },
            "match": {
              "location": "HooksClass.endTime()"
            }
          },
          {
            "result": {
              "duration": 4503168200,
              "status": "passed"
            },
            "match": {
              "location": "HooksClass.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2052862400,
              "status": "passed"
            },
            "line": 28,
            "name": "The user should type the invalid username\"c++\" and valid password\"35\"",
            "match": {
              "arguments": [
                {
                  "val": "\"c++\"",
                  "offset": 41
                },
                {
                  "val": "\"35\"",
                  "offset": 65
                }
              ],
              "location": "FacebookLoginStepDef.the_user_should_type_the_invalid_username_and_valid_password(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3547979800,
              "status": "passed"
            },
            "line": 29,
            "name": "The user should click the login button",
            "match": {
              "location": "FacebookLoginStepDef.the_user_should_click_the_login_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9211792100,
              "status": "passed"
            },
            "line": 30,
            "name": "The user should get the cuurent url of the incorrect credential page",
            "match": {
              "location": "FacebookLoginStepDef.the_user_should_get_the_cuurent_url_of_the_incorrect_credential_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16100999,
              "status": "passed"
            },
            "line": 31,
            "name": "The user should navigate to incorrect credential page",
            "match": {
              "location": "FacebookLoginStepDef.the_user_should_navigate_to_incorrect_credential_page()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "To validate login functionality of facebook",
    "description": "",
    "id": "to-validate-login-functionality-of-facebook",
    "keyword": "Feature",
    "uri": "file:src/test/resources/FeatureFiles/FaceBookLogin.feature",
    "tags": []
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2021-11-04T22:00:47.034Z",
        "before": [
          {
            "result": {
              "duration": 12481862700,
              "status": "passed"
            },
            "match": {
              "location": "HooksClass.beforeScenario()"
            }
          },
          {
            "result": {
              "duration": 290800,
              "status": "passed"
            },
            "match": {
              "location": "HooksClass.startTime()"
            }
          },
          {
            "result": {
              "duration": 318400,
              "status": "passed"
            },
            "match": {
              "location": "HooksClass.bfreSce()"
            }
          }
        ],
        "line": 3,
        "name": "verify the forget password functionality",
        "description": "",
        "id": "to-validate-the-forget-password-feature-in-the-facebook-page;verify-the-forget-password-functionality",
        "after": [
          {
            "embeddings": [
              {
                "data": "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\u003d\u003d",
                "mime_type": "image/jpg"
              }
            ],
            "result": {
              "duration": 282690700,
              "status": "passed"
            },
            "match": {
              "location": "HooksClass.aftrSce(Scenario)"
            }
          },
          {
            "result": {
              "duration": 241799,
              "status": "passed"
            },
            "match": {
              "location": "HooksClass.endTime()"
            }
          },
          {
            "result": {
              "duration": 774380399,
              "status": "passed"
            },
            "match": {
              "location": "HooksClass.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 18118501,
              "status": "passed"
            },
            "line": 4,
            "name": "The user should launch the browser",
            "match": {
              "location": "ForgetPasswStepDef.the_user_should_launch_the_browser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2270600,
              "status": "passed"
            },
            "line": 5,
            "name": "The person should load the url",
            "match": {
              "location": "ForgetPasswStepDef.the_person_should_load_the_url()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 24397199,
              "status": "passed"
            },
            "line": 6,
            "name": "The user should maximize the window",
            "match": {
              "location": "FacebookLoginStepDef.the_user_should_maximize_the_window()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//a[text()\u003d\u0027Forgotten password\u0027]\"}\n  (Session info: chrome\u003d95.0.4638.69)\nFor documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-AUNJ68Q\u0027, ip: \u0027192.168.43.12\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_301\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 95.0.4638.69, chrome: {chromedriverVersion: 95.0.4638.54 (d31a821ec901f..., userDataDir: C:\\Users\\welcome\\AppData\\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:58640}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}\nSession ID: 4f8c86ba3c56e8a087787f245945ea50\n*** Element info: {Using\u003dxpath, value\u003d//a[text()\u003d\u0027Forgotten password\u0027]}\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)\r\n\tat java.lang.reflect.Constructor.newInstance(Unknown Source)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)\r\n\tat org.stepdef.ForgetPasswStepDef.the_user_should_click_the_forget_password_link(ForgetPasswStepDef.java:28)\r\n\tat ✽.The user should click the forget password link(file:src/test/resources/FeatureFiles/ForgetPassword.feature:7)\r\n",
              "duration": 219223801,
              "status": "failed"
            },
            "line": 7,
            "name": "The user should click the forget password link",
            "match": {
              "location": "ForgetPasswStepDef.the_user_should_click_the_forget_password_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1669999,
              "status": "skipped"
            },
            "line": 8,
            "name": "The user should navigate to find your account page",
            "match": {
              "location": "ForgetPasswStepDef.the_user_should_navigate_to_find_your_account_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3634300,
              "status": "skipped"
            },
            "line": 9,
            "name": "The user should type the registered mobile number and email id",
            "match": {
              "location": "ForgetPasswStepDef.the_user_should_type_the_registered_mobile_number_and_email_id()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1113299,
              "status": "skipped"
            },
            "line": 10,
            "name": "The user should click the search button",
            "match": {
              "location": "ForgetPasswStepDef.the_user_should_click_the_search_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2217799,
              "status": "skipped"
            },
            "line": 11,
            "name": "The user should navigate to reset your password page",
            "match": {
              "location": "ForgetPasswStepDef.the_user_should_navigate_to_reset_your_password_page()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "To validate the forget password feature in the facebook page",
    "description": "",
    "id": "to-validate-the-forget-password-feature-in-the-facebook-page",
    "keyword": "Feature",
    "uri": "file:src/test/resources/FeatureFiles/ForgetPassword.feature",
    "tags": []
  }
]